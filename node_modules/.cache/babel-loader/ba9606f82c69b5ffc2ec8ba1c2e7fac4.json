{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amant\\\\OneDrive\\\\Desktop\\\\Web Dev Projects\\\\arweave-app\\\\src\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Arweave from 'arweave';\nimport './Create.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arweave = Arweave.init({\n  host: 'arweave.net',\n  port: 443,\n  protocol: 'https',\n  timeout: 20000,\n  logging: false\n});\n\nconst Create = props => {\n  _s();\n\n  const [confessions, setConfessions] = useState([]);\n  const [text, setText] = useState('');\n  const [bio, setBio] = useState('');\n  const [conf, setConf] = useState('');\n  let history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: text,\n      bio: bio,\n      confession: conf\n    };\n    props.getData(newUser);\n    setConfessions([...confessions, newUser]); // First we create the transaction\n\n    const transaction = arweave.createTransaction({\n      data: JSON.stringify(newUser)\n    }, process.env.REACT_APP_KEY); // Now we sign the transaction\n\n    await arweave.transactions.sign(transaction, process.env.REACT_APP_KEY); // After is signed, we send the transaction\n\n    await arweave.transaction.post(transaction);\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Create\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"text\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bio\",\n        name: \"bio\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Confession\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"confession\",\n        name: \"conf\",\n        onChange: e => setConf(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"submit\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"fRXZVHtXSRRGF0fK4+j4HNXS8gw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/amant/OneDrive/Desktop/Web Dev Projects/arweave-app/src/Create.js"],"names":["React","useState","Arweave","useHistory","arweave","init","host","port","protocol","timeout","logging","Create","props","confessions","setConfessions","text","setText","bio","setBio","conf","setConf","history","handleSubmit","event","preventDefault","newUser","name","confession","getData","transaction","createTransaction","data","JSON","stringify","process","env","REACT_APP_KEY","transactions","sign","post","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Arweave from 'arweave';\r\nimport './Create.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst arweave = Arweave.init({\r\n  host: 'arweave.net',\r\n  port: 443,\r\n  protocol: 'https',\r\n  timeout: 20000,\r\n  logging: false,\r\n});\r\n\r\nconst Create = (props) => {\r\n  const [confessions, setConfessions] = useState([]);\r\n  const [text, setText] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [conf, setConf] = useState('');\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newUser = { name: text, bio: bio, confession: conf };\r\n\r\n    props.getData(newUser);\r\n    setConfessions([...confessions, newUser]);\r\n\r\n    // First we create the transaction\r\n    const transaction = arweave.createTransaction(\r\n      {\r\n        data: JSON.stringify(newUser),\r\n      },\r\n      process.env.REACT_APP_KEY\r\n    );\r\n    // Now we sign the transaction\r\n    await arweave.transactions.sign(transaction, process.env.REACT_APP_KEY);\r\n    // After is signed, we send the transaction\r\n    await arweave.transaction.post(transaction);\r\n\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className='Create'>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Enter Name</label>\r\n        <br />\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          name='text'\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <br />\r\n        <label>Enter Bio</label>\r\n        <br />\r\n        <textarea\r\n          id='bio'\r\n          name='bio'\r\n          onChange={(e) => setBio(e.target.value)}\r\n        ></textarea>\r\n        <label>Enter Confession</label>\r\n        <br />\r\n        <textarea\r\n          id='confession'\r\n          name='conf'\r\n          onChange={(e) => setConf(e.target.value)}\r\n        ></textarea>\r\n        <input id='submit' type='submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}