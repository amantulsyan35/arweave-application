{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amant\\\\OneDrive\\\\Desktop\\\\Web Dev Projects\\\\arweave-app\\\\src\\\\View.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { queryData, getTransactionData } from './Arweave';\nimport Arweave from 'arweave';\nimport './View.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst View = props => {\n  _s();\n\n  const {\n    REACT_APP_KEY\n  } = process.env;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // let response = await queryData(JSON.parse(REACT_APP_KEY));\n        let walletAddy = 'jbSxA_VuAGYOsHauLvRp4Ujw1CeLAGChrkMIPoLIBGs';\n        walletAddy = walletAddy.toString();\n        const txids = await Arweave.arql({\n          op: 'and',\n          expr1: {\n            op: 'equals',\n            expr1: 'from',\n            expr2: walletAddy\n          },\n          expr2: {\n            op: 'equals',\n            expr1: 'Application',\n            expr2: 'armeme-gallery-2021'\n          }\n        });\n        console.log(txids);\n        let arr = [];\n\n        for (var i = 0; i < txids.length; i++) {\n          let data = await getTransactionData(txids[i]);\n          console.log(data);\n          let parseData = JSON.parse(data);\n          arr.push(parseData);\n        }\n      } catch (e) {\n        throw e;\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), props.confessions.map(u => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"User-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://robohash.org/${u.name}`,\n            alt: u.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: u.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: u.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"User-conf\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [u.confession, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(View, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/amant/OneDrive/Desktop/Web Dev Projects/arweave-app/src/View.js"],"names":["React","useState","useEffect","queryData","getTransactionData","Arweave","View","props","REACT_APP_KEY","process","env","fetchData","walletAddy","toString","txids","arql","op","expr1","expr2","console","log","arr","i","length","data","parseData","JSON","parse","push","e","confessions","map","u","name","bio","confession"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,WAA9C;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAoBC,OAAO,CAACC,GAAlC;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF;AACA,YAAIC,UAAU,GAAG,6CAAjB;AACAA,QAAAA,UAAU,GAAGA,UAAU,CAACC,QAAX,EAAb;AACA,cAAMC,KAAK,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa;AAC/BC,UAAAA,EAAE,EAAE,KAD2B;AAE/BC,UAAAA,KAAK,EAAE;AACLD,YAAAA,EAAE,EAAE,QADC;AAELC,YAAAA,KAAK,EAAE,MAFF;AAGLC,YAAAA,KAAK,EAAEN;AAHF,WAFwB;AAO/BM,UAAAA,KAAK,EAAE;AACLF,YAAAA,EAAE,EAAE,QADC;AAELC,YAAAA,KAAK,EAAE,aAFF;AAGLC,YAAAA,KAAK,EAAE;AAHF;AAPwB,SAAb,CAApB;AAcAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,YAAIO,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAIE,IAAI,GAAG,MAAMpB,kBAAkB,CAACU,KAAK,CAACQ,CAAD,CAAN,CAAnC;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AAEA,cAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AAEAH,UAAAA,GAAG,CAACO,IAAJ,CAASH,SAAT;AACD;AACF,OA9BD,CA8BE,OAAOI,CAAP,EAAU;AACV,cAAMA,CAAN;AACD;AACF,KAlCD;;AAmCAlB,IAAAA,SAAS;AACV,GArCQ,EAqCN,EArCM,CAAT;AAuCA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,KAAK,CAACuB,WAAN,CAAkBC,GAAlB,CAAuBC,CAAD,IAAO;AAC5B,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAK,YAAA,GAAG,EAAG,wBAAuBA,CAAC,CAACC,IAAK,EAAzC;AAA4C,YAAA,GAAG,EAAED,CAAC,CAACC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAKD,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAA,uBAAIF,CAAC,CAACG,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5DD;;GAAM7B,I;;KAAAA,I;AA8DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { queryData, getTransactionData } from './Arweave';\r\nimport Arweave from 'arweave';\r\n\r\nimport './View.css';\r\n\r\nconst View = (props) => {\r\n  const { REACT_APP_KEY } = process.env;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // let response = await queryData(JSON.parse(REACT_APP_KEY));\r\n        let walletAddy = 'jbSxA_VuAGYOsHauLvRp4Ujw1CeLAGChrkMIPoLIBGs';\r\n        walletAddy = walletAddy.toString();\r\n        const txids = await Arweave.arql({\r\n          op: 'and',\r\n          expr1: {\r\n            op: 'equals',\r\n            expr1: 'from',\r\n            expr2: walletAddy,\r\n          },\r\n          expr2: {\r\n            op: 'equals',\r\n            expr1: 'Application',\r\n            expr2: 'armeme-gallery-2021',\r\n          },\r\n        });\r\n\r\n        console.log(txids);\r\n\r\n        let arr = [];\r\n\r\n        for (var i = 0; i < txids.length; i++) {\r\n          let data = await getTransactionData(txids[i]);\r\n          console.log(data);\r\n\r\n          let parseData = JSON.parse(data);\r\n\r\n          arr.push(parseData);\r\n        }\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>View Data</h1>\r\n      {props.confessions.map((u) => {\r\n        return (\r\n          <div className='User-card'>\r\n            <div className='User-avatar'>\r\n              <img src={`https://robohash.org/${u.name}`} alt={u.name}></img>\r\n            </div>\r\n            <h3>{u.name}</h3>\r\n            <h4>{u.bio}</h4>\r\n            <div className='User-conf'>\r\n              <p>{u.confession} </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n"]},"metadata":{},"sourceType":"module"}