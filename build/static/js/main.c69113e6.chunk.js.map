{"version":3,"sources":["Navbar.js","confession.svg","Homepage.js","Arweave.js","form.svg","Create.js","View.js","App.js","index.js"],"names":["Navbar","className","exact","activeClassName","to","Homepage","src","confession","alt","arweave","Arweave","init","host","port","protocol","getWalletAddress","wallet","a","wallets","jwkToAddress","createDataTransaction","data","key","transform","JSON","stringify","createTransaction","transaction","addTag","signAndSubmitTransaction","transactions","sign","post","response","getTransactionData","id","getData","decode","string","queryData","walletAddress","toString","arql","op","expr1","expr2","txids","require","config","path","Create","props","console","log","useState","confessions","setConfessions","text","setText","bio","setBio","conf","setConf","history","useHistory","handleSubmit","event","preventDefault","newUser","name","parse","process","push","onSubmit","type","onChange","e","target","value","form","generate","View","clicked","setClicked","useEffect","arr","i","length","parseData","fetchData","handleClick","map","c","size","dashed","onClick","App","setData","addData","d","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c69113e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='Navbar'>\r\n      <NavLink exact activeClassName='active-link' to='/'>\r\n        Home\r\n      </NavLink>\r\n      <NavLink exact activeClassName='active-link' to='/create'>\r\n        Create\r\n      </NavLink>\r\n      <NavLink exact activeClassName='active-link' to='/view'>\r\n        View\r\n      </NavLink>\r\n      <NavLink exact activeClassName='active-link' to='/about'>\r\n        About\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/confession.e64a8b45.svg\";","import React from 'react';\r\n\r\nimport confession from './confession.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Homepage.css';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <div className='Home'>\r\n      <h1>Anonymous Confessions</h1>\r\n      <div className='Home-image'>\r\n        <img src={confession} alt='home' />\r\n      </div>\r\n      <div className='Home-buttons'>\r\n        <Link to='/create'>Create Confessions</Link>\r\n        <Link to='/view'>View Confessions</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import Arweave from 'arweave';\r\n\r\nconst arweave = Arweave.init({\r\n  host: 'arweave.net',\r\n  port: 443,\r\n  protocol: 'https',\r\n});\r\n\r\nasync function getWalletAddress(wallet) {\r\n  return arweave.wallets.jwkToAddress(wallet);\r\n}\r\n\r\nasync function getAddressBalance(key) {\r\n  const balance = await arweave.wallets.getBalance(key);\r\n  const convert = arweave.ar.winstonToAr(balance);\r\n  return convert;\r\n}\r\n\r\nasync function createDataTransaction(data, key) {\r\n  let transform = JSON.stringify(data);\r\n  let transaction = await arweave.createTransaction({ data: transform }, key);\r\n\r\n  transaction.addTag('Application', 'arweave-confessions');\r\n\r\n  return transaction;\r\n}\r\n\r\nasync function signAndSubmitTransaction(transaction, key) {\r\n  await arweave.transactions.sign(transaction, key);\r\n  let response = await arweave.transactions.post(transaction);\r\n  return response;\r\n}\r\n\r\nasync function getTransactionData(id) {\r\n  return await arweave.transactions.getData(id, { decode: true, string: true });\r\n}\r\n\r\nasync function queryData(key) {\r\n  let walletAddress = await getWalletAddress(key);\r\n  walletAddress = walletAddress.toString();\r\n  const txids = await arweave.arql({\r\n    op: 'and',\r\n    expr1: {\r\n      op: 'equals',\r\n      expr1: 'from',\r\n      expr2: walletAddress,\r\n    },\r\n    expr2: {\r\n      op: 'equals',\r\n      expr1: 'Application',\r\n      expr2: 'arweave-confessions',\r\n    },\r\n  });\r\n\r\n  return txids;\r\n}\r\n\r\nexport {\r\n  getWalletAddress,\r\n  getAddressBalance,\r\n  createDataTransaction,\r\n  signAndSubmitTransaction,\r\n  getTransactionData,\r\n  queryData,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/form.805fe275.svg\";","import React, { useState } from 'react';\r\nimport './Create.css';\r\nimport { createDataTransaction, signAndSubmitTransaction } from './Arweave';\r\nimport { useHistory } from 'react-router-dom';\r\nimport form from './form.svg';\r\n\r\nrequire('dotenv').config({ path: '../' });\r\n\r\nconst Create = (props) => {\r\n  console.log();\r\n\r\n  const [confessions, setConfessions] = useState([]);\r\n  const [text, setText] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [conf, setConf] = useState('');\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newUser = { name: text, bio: bio, confession: conf };\r\n\r\n    props.getData(newUser);\r\n    setConfessions([...confessions, newUser]);\r\n\r\n    // First we create the transaction\r\n    let transaction = await createDataTransaction(\r\n      newUser,\r\n      JSON.parse(process.env.REACT_APP_MY_API_KEY)\r\n    );\r\n\r\n    // Now we sign and submit the transaction\r\n    await signAndSubmitTransaction(\r\n      transaction,\r\n      JSON.parse(process.env.REACT_APP_MY_API_KEY)\r\n    );\r\n\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className='Create'>\r\n      <div className='Create-1'>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className='Form-group'>\r\n            <label>Enter Name</label>\r\n            <input\r\n              type='text'\r\n              id='name'\r\n              name='text'\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='Form-group'>\r\n            <label>Enter Bio</label>\r\n            <textarea\r\n              id='bio'\r\n              name='bio'\r\n              onChange={(e) => setBio(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className='Form-group'>\r\n            <label>Enter Confession</label>\r\n            <textarea\r\n              id='confession'\r\n              name='conf'\r\n              onChange={(e) => setConf(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <button id='submit' type='submit'>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className='Create-2'>\r\n        <img src={form} alt='form' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getTransactionData, queryData } from './Arweave';\r\nimport './View.css';\r\nimport Identicon from 'react-identicons';\r\nimport QRCode from 'react-qr-code';\r\nrequire('dotenv').config({ path: '../' });\r\nconst generate = require('project-name-generator');\r\n\r\nconst View = (props) => {\r\n  const [confessions, setConfessions] = useState([]);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // console.log(process.env.REACT_APP_NODE_ENV);\r\n        let response = await queryData(\r\n          JSON.parse(process.env.REACT_APP_MY_API_KEY)\r\n        );\r\n\r\n        let arr = [];\r\n\r\n        for (var i = 0; i < response.length; i++) {\r\n          let data = await getTransactionData(response[i]);\r\n\r\n          let parseData = JSON.parse(data);\r\n\r\n          arr.push(parseData);\r\n          // console.log(arr);\r\n          setConfessions(arr);\r\n        }\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    let state = !clicked;\r\n    setClicked(state);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='View-container'>\r\n        {confessions.map((c) => {\r\n          return (\r\n            <div key={c.name} className='User-card'>\r\n              {clicked === false && (\r\n                <div>\r\n                  <div className='User-avatar'>\r\n                    {/*<img\r\n                      src={`https://robohash.org/${c.name}`}\r\n                      alt={c.name}\r\n                    ></img>*/}\r\n                    <Identicon string='randomness' size='30' />\r\n                  </div>\r\n\r\n                  <div className='User-details'>\r\n                    <span>{generate().dashed}</span>\r\n                    <span>{c.bio}</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {clicked === true && (\r\n                <div className='User-qr-code'>\r\n                  <div className='User-qr-image'>\r\n                    {/*<img\r\n                      src={`https://api.qrserver.com/v1/create-qr-code/?data=${c.confession}&amp;size=100x100`}\r\n                      alt={c.confession}\r\n                    />*/}\r\n                    <QRCode value={c.confession} size='128' />\r\n                  </div>\r\n                  <span>Scan to see the confession</span>\r\n                </div>\r\n              )}\r\n              <div className='User-conf'>\r\n                <button onClick={handleClick}>\r\n                  {clicked === false ? 'See Confession' : 'Revert'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport Navbar from './Navbar';\nimport { Switch, Route } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport Create from './Create';\nimport View from './View';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const addData = (d) => {\n    setData([...data, d]);\n  };\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' render={() => <Homepage />}></Route>\n        <Route\n          exact\n          path='/create'\n          render={(routeProps) => <Create {...routeProps} getData={addData} />}\n        ></Route>\n        <Route\n          exact\n          path='/view'\n          render={() => <View confessions={data} />}\n        ></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}